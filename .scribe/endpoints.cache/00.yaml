## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Login API'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the  user.'
        required: true
        example: superadmin@invoke.com
        type: string
      password:
        name: password
        description: 'The password of the  user.'
        required: true
        example: password
        type: string
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": {{token}},
           "token_type": "Bearer",
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/dashboard
    metadata:
      title: Dashboard
      description: |-
        Check that the service is up. If everything is okay, you'll get a 200 OK Response

        Otherwise, the request will fail with a 400 error, and a response list
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'User API'
      description: 'Get all users by pagination'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'Page number for pagination.'
        required: false
        example: 1
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/getEmployees
    metadata:
      title: 'Get Employee API'
      description: 'Get employee details'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'Page number for pagination.'
        required: false
        example: 1
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/employees
    metadata:
      title: 'Employee API'
      description: 'Employee details'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
